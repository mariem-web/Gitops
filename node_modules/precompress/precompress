#!/usr/bin/env node
module.exports=(()=>{var t={231:(t,e,n)=>{"use strict";const o=n(43);const s=n(972);const r=t=>t.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,"");class AggregateError extends Error{constructor(t){if(!Array.isArray(t)){throw new TypeError(`Expected input to be an Array, got ${typeof t}`)}t=[...t].map(t=>{if(t instanceof Error){return t}if(t!==null&&typeof t==="object"){return Object.assign(new Error(t.message),t)}return new Error(t)});let e=t.map(t=>{return typeof t.stack==="string"?r(s(t.stack)):String(t)}).join("\n");e="\n"+o(e,4);super(e);this.name="AggregateError";Object.defineProperty(this,"_errors",{value:t})}*[Symbol.iterator](){for(const t of this._errors){yield t}}}t.exports=AggregateError},972:(t,e,n)=>{"use strict";const o=n(87);const s=/\s+at.*(?:\(|\s)(.*)\)?/;const r=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/;const u=typeof o.homedir==="undefined"?"":o.homedir();t.exports=((t,e)=>{e=Object.assign({pretty:false},e);return t.replace(/\\/g,"/").split("\n").filter(t=>{const e=t.match(s);if(e===null||!e[1]){return true}const n=e[1];if(n.includes(".app/Contents/Resources/electron.asar")||n.includes(".app/Contents/Resources/default_app.asar")){return false}return!r.test(n)}).filter(t=>t.trim()!=="").map(t=>{if(e.pretty){return t.replace(s,(t,e)=>t.replace(e,e.replace(u,"~")))}return t}).join("\n")})},43:t=>{"use strict";t.exports=((t,e=1,n)=>{n={indent:" ",includeEmptyLines:false,...n};if(typeof t!=="string"){throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof t}\``)}if(typeof e!=="number"){throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof e}\``)}if(typeof n.indent!=="string"){throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof n.indent}\``)}if(e===0){return t}const o=n.includeEmptyLines?/^/gm:/^(?!\s*$)/gm;return t.replace(o,n.indent.repeat(e))})},871:t=>{t.exports=function(t,e){if(!e)e={};var n={bools:{},strings:{},unknownFn:null};if(typeof e["unknown"]==="function"){n.unknownFn=e["unknown"]}if(typeof e["boolean"]==="boolean"&&e["boolean"]){n.allBools=true}else{[].concat(e["boolean"]).filter(Boolean).forEach(function(t){n.bools[t]=true})}var o={};Object.keys(e.alias||{}).forEach(function(t){o[t]=[].concat(e.alias[t]);o[t].forEach(function(e){o[e]=[t].concat(o[t].filter(function(t){return e!==t}))})});[].concat(e.string).filter(Boolean).forEach(function(t){n.strings[t]=true;if(o[t]){n.strings[o[t]]=true}});var s=e["default"]||{};var r={_:[]};Object.keys(n.bools).forEach(function(t){setArg(t,s[t]===undefined?false:s[t])});var u=[];if(t.indexOf("--")!==-1){u=t.slice(t.indexOf("--")+1);t=t.slice(0,t.indexOf("--"))}function argDefined(t,e){return n.allBools&&/^--[^=]+$/.test(e)||n.strings[t]||n.bools[t]||o[t]}function setArg(t,e,s){if(s&&n.unknownFn&&!argDefined(t,s)){if(n.unknownFn(s)===false)return}var u=!n.strings[t]&&isNumber(e)?Number(e):e;setKey(r,t.split("."),u);(o[t]||[]).forEach(function(t){setKey(r,t.split("."),u)})}function setKey(t,e,o){var s=t;for(var r=0;r<e.length-1;r++){var u=e[r];if(u==="__proto__")return;if(s[u]===undefined)s[u]={};if(s[u]===Object.prototype||s[u]===Number.prototype||s[u]===String.prototype)s[u]={};if(s[u]===Array.prototype)s[u]=[];s=s[u]}var u=e[e.length-1];if(u==="__proto__")return;if(s===Object.prototype||s===Number.prototype||s===String.prototype)s={};if(s===Array.prototype)s=[];if(s[u]===undefined||n.bools[u]||typeof s[u]==="boolean"){s[u]=o}else if(Array.isArray(s[u])){s[u].push(o)}else{s[u]=[s[u],o]}}function aliasIsBoolean(t){return o[t].some(function(t){return n.bools[t]})}for(var i=0;i<t.length;i++){var c=t[i];if(/^--.+=/.test(c)){var l=c.match(/^--([^=]+)=([\s\S]*)$/);var a=l[1];var f=l[2];if(n.bools[a]){f=f!=="false"}setArg(a,f,c)}else if(/^--no-.+/.test(c)){var a=c.match(/^--no-(.+)/)[1];setArg(a,false,c)}else if(/^--.+/.test(c)){var a=c.match(/^--(.+)/)[1];var p=t[i+1];if(p!==undefined&&!/^-/.test(p)&&!n.bools[a]&&!n.allBools&&(o[a]?!aliasIsBoolean(a):true)){setArg(a,p,c);i++}else if(/^(true|false)$/.test(p)){setArg(a,p==="true",c);i++}else{setArg(a,n.strings[a]?"":true,c)}}else if(/^-[^-]+/.test(c)){var h=c.slice(1,-1).split("");var A=false;for(var _=0;_<h.length;_++){var p=c.slice(_+2);if(p==="-"){setArg(h[_],p,c);continue}if(/[A-Za-z]/.test(h[_])&&/=/.test(p)){setArg(h[_],p.split("=")[1],c);A=true;break}if(/[A-Za-z]/.test(h[_])&&/-?\d+(\.\d*)?(e-?\d+)?$/.test(p)){setArg(h[_],p,c);A=true;break}if(h[_+1]&&h[_+1].match(/\W/)){setArg(h[_],c.slice(_+2),c);A=true;break}else{setArg(h[_],n.strings[h[_]]?"":true,c)}}var a=c.slice(-1)[0];if(!A&&a!=="-"){if(t[i+1]&&!/^(-|--)[^-]/.test(t[i+1])&&!n.bools[a]&&(o[a]?!aliasIsBoolean(a):true)){setArg(a,t[i+1],c);i++}else if(t[i+1]&&/^(true|false)$/.test(t[i+1])){setArg(a,t[i+1]==="true",c);i++}else{setArg(a,n.strings[a]?"":true,c)}}}else{if(!n.unknownFn||n.unknownFn(c)!==false){r._.push(n.strings["_"]||!isNumber(c)?c:Number(c))}if(e.stopEarly){r._.push.apply(r._,t.slice(i+1));break}}}Object.keys(s).forEach(function(t){if(!hasKey(r,t.split("."))){setKey(r,t.split("."),s[t]);(o[t]||[]).forEach(function(e){setKey(r,e.split("."),s[t])})}});if(e["--"]){r["--"]=new Array;u.forEach(function(t){r["--"].push(t)})}else{u.forEach(function(t){r._.push(t)})}return r};function hasKey(t,e){var n=t;e.slice(0,-1).forEach(function(t){n=n[t]||{}});var o=e[e.length-1];return o in n}function isNumber(t){if(typeof t==="number")return true;if(/^0x[0-9a-f]+$/i.test(t))return true;return/^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(t)}},855:(t,e,n)=>{"use strict";const o=n(231);t.exports=(async(t,e,{concurrency:n=Infinity,stopOnError:s=true}={})=>{return new Promise((r,u)=>{if(typeof e!=="function"){throw new TypeError("Mapper function is required")}if(!((Number.isSafeInteger(n)||n===Infinity)&&n>=1)){throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${n}\` (${typeof n})`)}const i=[];const c=[];const l=t[Symbol.iterator]();let a=false;let f=false;let p=0;let h=0;const A=()=>{if(a){return}const t=l.next();const n=h;h++;if(t.done){f=true;if(p===0){if(!s&&c.length!==0){u(new o(c))}else{r(i)}}return}p++;(async()=>{try{const o=await t.value;i[n]=await e(o,n);p--;A()}catch(t){if(s){a=true;u(t)}else{c.push(t);p--;A()}}})()};for(let t=0;t<n;t++){A();if(f){break}}})})},569:(t,e,n)=>{"use strict";t.exports=n(322)},99:(t,e,n)=>{"use strict";const o=n(622);const s="\\\\/";const r=`[^${s}]`;const u="\\.";const i="\\+";const c="\\?";const l="\\/";const a="(?=.)";const f="[^/]";const p=`(?:${l}|$)`;const h=`(?:^|${l})`;const A=`${u}{1,2}${p}`;const _=`(?!${u})`;const d=`(?!${h}${A})`;const b=`(?!${u}{0,1}${p})`;const R=`(?!${A})`;const E=`[^.${l}]`;const m=`${f}*?`;const y={DOT_LITERAL:u,PLUS_LITERAL:i,QMARK_LITERAL:c,SLASH_LITERAL:l,ONE_CHAR:a,QMARK:f,END_ANCHOR:p,DOTS_SLASH:A,NO_DOT:_,NO_DOTS:d,NO_DOT_SLASH:b,NO_DOTS_SLASH:R,QMARK_NO_DOT:E,STAR:m,START_ANCHOR:h};const $={...y,SLASH_LITERAL:`[${s}]`,QMARK:r,STAR:`${r}*?`,DOTS_SLASH:`${u}{1,2}(?:[${s}]|$)`,NO_DOT:`(?!${u})`,NO_DOTS:`(?!(?:^|[${s}])${u}{1,2}(?:[${s}]|$))`,NO_DOT_SLASH:`(?!${u}{0,1}(?:[${s}]|$))`,NO_DOTS_SLASH:`(?!${u}{1,2}(?:[${s}]|$))`,QMARK_NO_DOT:`[^.${s}]`,START_ANCHOR:`(?:^|[${s}])`,END_ANCHOR:`(?:[${s}]|$)`};const S={alnum:"a-zA-Z0-9",alpha:"a-zA-Z",ascii:"\\x00-\\x7F",blank:" \\t",cntrl:"\\x00-\\x1F\\x7F",digit:"0-9",graph:"\\x21-\\x7E",lower:"a-z",print:"\\x20-\\x7E ",punct:"\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",space:" \\t\\r\\n\\v\\f",upper:"A-Z",word:"A-Za-z0-9_",xdigit:"A-Fa-f0-9"};t.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:S,REGEX_BACKSLASH:/\\(?![*+?^${}(|)[\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\].,$*+?^{}()|\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\?)((\W)(\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\[.*?[^\\]\]|\\(?=.))/g,REPLACEMENTS:{"***":"*","**/**":"**","**/**/**":"**"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,SEP:o.sep,extglobChars(t){return{"!":{type:"negate",open:"(?:(?!(?:",close:`))${t.STAR})`},"?":{type:"qmark",open:"(?:",close:")?"},"+":{type:"plus",open:"(?:",close:")+"},"*":{type:"star",open:"(?:",close:")*"},"@":{type:"at",open:"(?:",close:")"}}},globChars(t){return t===true?$:y}}},139:(t,e,n)=>{"use strict";const o=n(99);const s=n(479);const{MAX_LENGTH:r,POSIX_REGEX_SOURCE:u,REGEX_NON_SPECIAL_CHARS:i,REGEX_SPECIAL_CHARS_BACKREF:c,REPLACEMENTS:l}=o;const a=(t,e)=>{if(typeof e.expandRange==="function"){return e.expandRange(...t,e)}t.sort();const n=`[${t.join("-")}]`;try{new RegExp(n)}catch(e){return t.map(t=>s.escapeRegex(t)).join("..")}return n};const f=(t,e)=>{return`Missing ${t}: "${e}" - use "\\\\${e}" to match literal characters`};const p=(t,e)=>{if(typeof t!=="string"){throw new TypeError("Expected a string")}t=l[t]||t;const n={...e};const p=typeof n.maxLength==="number"?Math.min(r,n.maxLength):r;let h=t.length;if(h>p){throw new SyntaxError(`Input length: ${h}, exceeds maximum allowed length: ${p}`)}const A={type:"bos",value:"",output:n.prepend||""};const _=[A];const d=n.capture?"":"?:";const b=s.isWindows(e);const R=o.globChars(b);const E=o.extglobChars(R);const{DOT_LITERAL:m,PLUS_LITERAL:y,SLASH_LITERAL:$,ONE_CHAR:S,DOTS_SLASH:C,NO_DOT:w,NO_DOT_SLASH:x,NO_DOTS_SLASH:g,QMARK:v,QMARK_NO_DOT:T,STAR:H,START_ANCHOR:L}=R;const O=t=>{return`(${d}(?:(?!${L}${t.dot?C:m}).)*?)`};const M=n.dot?"":w;const N=n.dot?v:T;let B=n.bash===true?O(n):H;if(n.capture){B=`(${B})`}if(typeof n.noext==="boolean"){n.noextglob=n.noext}const I={input:t,index:-1,start:0,dot:n.dot===true,consumed:"",output:"",prefix:"",backtrack:false,negated:false,brackets:0,braces:0,parens:0,quotes:0,globstar:false,tokens:_};t=s.removePrefix(t,I);h=t.length;const D=[];const P=[];const G=[];let K=A;let k;const F=()=>I.index===h-1;const U=I.peek=((e=1)=>t[I.index+e]);const X=I.advance=(()=>t[++I.index]);const q=()=>t.slice(I.index+1);const Q=(t="",e=0)=>{I.consumed+=t;I.index+=e};const W=t=>{I.output+=t.output!=null?t.output:t.value;Q(t.value)};const z=()=>{let t=1;while(U()==="!"&&(U(2)!=="("||U(3)==="?")){X();I.start++;t++}if(t%2===0){return false}I.negated=true;I.start++;return true};const Z=t=>{I[t]++;G.push(t)};const Y=t=>{I[t]--;G.pop()};const V=t=>{if(K.type==="globstar"){const e=I.braces>0&&(t.type==="comma"||t.type==="brace");const n=t.extglob===true||D.length&&(t.type==="pipe"||t.type==="paren");if(t.type!=="slash"&&t.type!=="paren"&&!e&&!n){I.output=I.output.slice(0,-K.output.length);K.type="star";K.value="*";K.output=B;I.output+=K.output}}if(D.length&&t.type!=="paren"&&!E[t.value]){D[D.length-1].inner+=t.value}if(t.value||t.output)W(t);if(K&&K.type==="text"&&t.type==="text"){K.value+=t.value;K.output=(K.output||"")+t.value;return}t.prev=K;_.push(t);K=t};const J=(t,e)=>{const o={...E[e],conditions:1,inner:""};o.prev=K;o.parens=I.parens;o.output=I.output;const s=(n.capture?"(":"")+o.open;Z("parens");V({type:t,value:e,output:I.output?"":S});V({type:"paren",extglob:true,value:X(),output:s});D.push(o)};const j=t=>{let e=t.close+(n.capture?")":"");if(t.type==="negate"){let o=B;if(t.inner&&t.inner.length>1&&t.inner.includes("/")){o=O(n)}if(o!==B||F()||/^\)+$/.test(q())){e=t.close=`)$))${o}`}if(t.prev.type==="bos"&&F()){I.negatedExtglob=true}}V({type:"paren",extglob:true,value:k,output:e});Y("parens")};if(n.fastpaths!==false&&!/(^[*!]|[/()[\]{}"])/.test(t)){let o=false;let r=t.replace(c,(t,e,n,s,r,u)=>{if(s==="\\"){o=true;return t}if(s==="?"){if(e){return e+s+(r?v.repeat(r.length):"")}if(u===0){return N+(r?v.repeat(r.length):"")}return v.repeat(n.length)}if(s==="."){return m.repeat(n.length)}if(s==="*"){if(e){return e+s+(r?B:"")}return B}return e?t:`\\${t}`});if(o===true){if(n.unescape===true){r=r.replace(/\\/g,"")}else{r=r.replace(/\\+/g,t=>{return t.length%2===0?"\\\\":t?"\\":""})}}if(r===t&&n.contains===true){I.output=t;return I}I.output=s.wrapOutput(r,I,e);return I}while(!F()){k=X();if(k==="\0"){continue}if(k==="\\"){const t=U();if(t==="/"&&n.bash!==true){continue}if(t==="."||t===";"){continue}if(!t){k+="\\";V({type:"text",value:k});continue}const e=/^\\+/.exec(q());let o=0;if(e&&e[0].length>2){o=e[0].length;I.index+=o;if(o%2!==0){k+="\\"}}if(n.unescape===true){k=X()||""}else{k+=X()||""}if(I.brackets===0){V({type:"text",value:k});continue}}if(I.brackets>0&&(k!=="]"||K.value==="["||K.value==="[^")){if(n.posix!==false&&k===":"){const t=K.value.slice(1);if(t.includes("[")){K.posix=true;if(t.includes(":")){const t=K.value.lastIndexOf("[");const e=K.value.slice(0,t);const n=K.value.slice(t+2);const o=u[n];if(o){K.value=e+o;I.backtrack=true;X();if(!A.output&&_.indexOf(K)===1){A.output=S}continue}}}}if(k==="["&&U()!==":"||k==="-"&&U()==="]"){k=`\\${k}`}if(k==="]"&&(K.value==="["||K.value==="[^")){k=`\\${k}`}if(n.posix===true&&k==="!"&&K.value==="["){k="^"}K.value+=k;W({value:k});continue}if(I.quotes===1&&k!=='"'){k=s.escapeRegex(k);K.value+=k;W({value:k});continue}if(k==='"'){I.quotes=I.quotes===1?0:1;if(n.keepQuotes===true){V({type:"text",value:k})}continue}if(k==="("){Z("parens");V({type:"paren",value:k});continue}if(k===")"){if(I.parens===0&&n.strictBrackets===true){throw new SyntaxError(f("opening","("))}const t=D[D.length-1];if(t&&I.parens===t.parens+1){j(D.pop());continue}V({type:"paren",value:k,output:I.parens?")":"\\)"});Y("parens");continue}if(k==="["){if(n.nobracket===true||!q().includes("]")){if(n.nobracket!==true&&n.strictBrackets===true){throw new SyntaxError(f("closing","]"))}k=`\\${k}`}else{Z("brackets")}V({type:"bracket",value:k});continue}if(k==="]"){if(n.nobracket===true||K&&K.type==="bracket"&&K.value.length===1){V({type:"text",value:k,output:`\\${k}`});continue}if(I.brackets===0){if(n.strictBrackets===true){throw new SyntaxError(f("opening","["))}V({type:"text",value:k,output:`\\${k}`});continue}Y("brackets");const t=K.value.slice(1);if(K.posix!==true&&t[0]==="^"&&!t.includes("/")){k=`/${k}`}K.value+=k;W({value:k});if(n.literalBrackets===false||s.hasRegexChars(t)){continue}const e=s.escapeRegex(K.value);I.output=I.output.slice(0,-K.value.length);if(n.literalBrackets===true){I.output+=e;K.value=e;continue}K.value=`(${d}${e}|${K.value})`;I.output+=K.value;continue}if(k==="{"&&n.nobrace!==true){Z("braces");const t={type:"brace",value:k,output:"(",outputIndex:I.output.length,tokensIndex:I.tokens.length};P.push(t);V(t);continue}if(k==="}"){const t=P[P.length-1];if(n.nobrace===true||!t){V({type:"text",value:k,output:k});continue}let e=")";if(t.dots===true){const t=_.slice();const o=[];for(let e=t.length-1;e>=0;e--){_.pop();if(t[e].type==="brace"){break}if(t[e].type!=="dots"){o.unshift(t[e].value)}}e=a(o,n);I.backtrack=true}if(t.comma!==true&&t.dots!==true){const n=I.output.slice(0,t.outputIndex);const o=I.tokens.slice(t.tokensIndex);t.value=t.output="\\{";k=e="\\}";I.output=n;for(const t of o){I.output+=t.output||t.value}}V({type:"brace",value:k,output:e});Y("braces");P.pop();continue}if(k==="|"){if(D.length>0){D[D.length-1].conditions++}V({type:"text",value:k});continue}if(k===","){let t=k;const e=P[P.length-1];if(e&&G[G.length-1]==="braces"){e.comma=true;t="|"}V({type:"comma",value:k,output:t});continue}if(k==="/"){if(K.type==="dot"&&I.index===I.start+1){I.start=I.index+1;I.consumed="";I.output="";_.pop();K=A;continue}V({type:"slash",value:k,output:$});continue}if(k==="."){if(I.braces>0&&K.type==="dot"){if(K.value===".")K.output=m;const t=P[P.length-1];K.type="dots";K.output+=k;K.value+=k;t.dots=true;continue}if(I.braces+I.parens===0&&K.type!=="bos"&&K.type!=="slash"){V({type:"text",value:k,output:m});continue}V({type:"dot",value:k,output:m});continue}if(k==="?"){const t=K&&K.value==="(";if(!t&&n.noextglob!==true&&U()==="("&&U(2)!=="?"){J("qmark",k);continue}if(K&&K.type==="paren"){const t=U();let e=k;if(t==="<"&&!s.supportsLookbehinds()){throw new Error("Node.js v10 or higher is required for regex lookbehinds")}if(K.value==="("&&!/[!=<:]/.test(t)||t==="<"&&!/<([!=]|\w+>)/.test(q())){e=`\\${k}`}V({type:"text",value:k,output:e});continue}if(n.dot!==true&&(K.type==="slash"||K.type==="bos")){V({type:"qmark",value:k,output:T});continue}V({type:"qmark",value:k,output:v});continue}if(k==="!"){if(n.noextglob!==true&&U()==="("){if(U(2)!=="?"||!/[!=<:]/.test(U(3))){J("negate",k);continue}}if(n.nonegate!==true&&I.index===0){z();continue}}if(k==="+"){if(n.noextglob!==true&&U()==="("&&U(2)!=="?"){J("plus",k);continue}if(K&&K.value==="("||n.regex===false){V({type:"plus",value:k,output:y});continue}if(K&&(K.type==="bracket"||K.type==="paren"||K.type==="brace")||I.parens>0){V({type:"plus",value:k});continue}V({type:"plus",value:y});continue}if(k==="@"){if(n.noextglob!==true&&U()==="("&&U(2)!=="?"){V({type:"at",extglob:true,value:k,output:""});continue}V({type:"text",value:k});continue}if(k!=="*"){if(k==="$"||k==="^"){k=`\\${k}`}const t=i.exec(q());if(t){k+=t[0];I.index+=t[0].length}V({type:"text",value:k});continue}if(K&&(K.type==="globstar"||K.star===true)){K.type="star";K.star=true;K.value+=k;K.output=B;I.backtrack=true;I.globstar=true;Q(k);continue}let e=q();if(n.noextglob!==true&&/^\([^?]/.test(e)){J("star",k);continue}if(K.type==="star"){if(n.noglobstar===true){Q(k);continue}const o=K.prev;const s=o.prev;const r=o.type==="slash"||o.type==="bos";const u=s&&(s.type==="star"||s.type==="globstar");if(n.bash===true&&(!r||e[0]&&e[0]!=="/")){V({type:"star",value:k,output:""});continue}const i=I.braces>0&&(o.type==="comma"||o.type==="brace");const c=D.length&&(o.type==="pipe"||o.type==="paren");if(!r&&o.type!=="paren"&&!i&&!c){V({type:"star",value:k,output:""});continue}while(e.slice(0,3)==="/**"){const n=t[I.index+4];if(n&&n!=="/"){break}e=e.slice(3);Q("/**",3)}if(o.type==="bos"&&F()){K.type="globstar";K.value+=k;K.output=O(n);I.output=K.output;I.globstar=true;Q(k);continue}if(o.type==="slash"&&o.prev.type!=="bos"&&!u&&F()){I.output=I.output.slice(0,-(o.output+K.output).length);o.output=`(?:${o.output}`;K.type="globstar";K.output=O(n)+(n.strictSlashes?")":"|$)");K.value+=k;I.globstar=true;I.output+=o.output+K.output;Q(k);continue}if(o.type==="slash"&&o.prev.type!=="bos"&&e[0]==="/"){const t=e[1]!==void 0?"|$":"";I.output=I.output.slice(0,-(o.output+K.output).length);o.output=`(?:${o.output}`;K.type="globstar";K.output=`${O(n)}${$}|${$}${t})`;K.value+=k;I.output+=o.output+K.output;I.globstar=true;Q(k+X());V({type:"slash",value:"/",output:""});continue}if(o.type==="bos"&&e[0]==="/"){K.type="globstar";K.value+=k;K.output=`(?:^|${$}|${O(n)}${$})`;I.output=K.output;I.globstar=true;Q(k+X());V({type:"slash",value:"/",output:""});continue}I.output=I.output.slice(0,-K.output.length);K.type="globstar";K.output=O(n);K.value+=k;I.output+=K.output;I.globstar=true;Q(k);continue}const o={type:"star",value:k,output:B};if(n.bash===true){o.output=".*?";if(K.type==="bos"||K.type==="slash"){o.output=M+o.output}V(o);continue}if(K&&(K.type==="bracket"||K.type==="paren")&&n.regex===true){o.output=k;V(o);continue}if(I.index===I.start||K.type==="slash"||K.type==="dot"){if(K.type==="dot"){I.output+=x;K.output+=x}else if(n.dot===true){I.output+=g;K.output+=g}else{I.output+=M;K.output+=M}if(U()!=="*"){I.output+=S;K.output+=S}}V(o)}while(I.brackets>0){if(n.strictBrackets===true)throw new SyntaxError(f("closing","]"));I.output=s.escapeLast(I.output,"[");Y("brackets")}while(I.parens>0){if(n.strictBrackets===true)throw new SyntaxError(f("closing",")"));I.output=s.escapeLast(I.output,"(");Y("parens")}while(I.braces>0){if(n.strictBrackets===true)throw new SyntaxError(f("closing","}"));I.output=s.escapeLast(I.output,"{");Y("braces")}if(n.strictSlashes!==true&&(K.type==="star"||K.type==="bracket")){V({type:"maybe_slash",value:"",output:`${$}?`})}if(I.backtrack===true){I.output="";for(const t of I.tokens){I.output+=t.output!=null?t.output:t.value;if(t.suffix){I.output+=t.suffix}}}return I};p.fastpaths=((t,e)=>{const n={...e};const u=typeof n.maxLength==="number"?Math.min(r,n.maxLength):r;const i=t.length;if(i>u){throw new SyntaxError(`Input length: ${i}, exceeds maximum allowed length: ${u}`)}t=l[t]||t;const c=s.isWindows(e);const{DOT_LITERAL:a,SLASH_LITERAL:f,ONE_CHAR:p,DOTS_SLASH:h,NO_DOT:A,NO_DOTS:_,NO_DOTS_SLASH:d,STAR:b,START_ANCHOR:R}=o.globChars(c);const E=n.dot?_:A;const m=n.dot?d:A;const y=n.capture?"":"?:";const $={negated:false,prefix:""};let S=n.bash===true?".*?":b;if(n.capture){S=`(${S})`}const C=t=>{if(t.noglobstar===true)return S;return`(${y}(?:(?!${R}${t.dot?h:a}).)*?)`};const w=t=>{switch(t){case"*":return`${E}${p}${S}`;case".*":return`${a}${p}${S}`;case"*.*":return`${E}${S}${a}${p}${S}`;case"*/*":return`${E}${S}${f}${p}${m}${S}`;case"**":return E+C(n);case"**/*":return`(?:${E}${C(n)}${f})?${m}${p}${S}`;case"**/*.*":return`(?:${E}${C(n)}${f})?${m}${S}${a}${p}${S}`;case"**/.*":return`(?:${E}${C(n)}${f})?${a}${p}${S}`;default:{const e=/^(.*?)\.(\w+)$/.exec(t);if(!e)return;const n=w(e[1]);if(!n)return;return n+a+e[2]}}};const x=s.removePrefix(t,$);let g=w(x);if(g&&n.strictSlashes!==true){g+=`${f}?`}return g});t.exports=p},322:(t,e,n)=>{"use strict";const o=n(622);const s=n(429);const r=n(139);const u=n(479);const i=n(99);const c=t=>t&&typeof t==="object"&&!Array.isArray(t);const l=(t,e,n=false)=>{if(Array.isArray(t)){const o=t.map(t=>l(t,e,n));const s=t=>{for(const e of o){const n=e(t);if(n)return n}return false};return s}const o=c(t)&&t.tokens&&t.input;if(t===""||typeof t!=="string"&&!o){throw new TypeError("Expected pattern to be a non-empty string")}const s=e||{};const r=u.isWindows(e);const i=o?l.compileRe(t,e):l.makeRe(t,e,false,true);const a=i.state;delete i.state;let f=()=>false;if(s.ignore){const t={...e,ignore:null,onMatch:null,onResult:null};f=l(s.ignore,t,n)}const p=(n,o=false)=>{const{isMatch:u,match:c,output:p}=l.test(n,i,e,{glob:t,posix:r});const h={glob:t,state:a,regex:i,posix:r,input:n,output:p,match:c,isMatch:u};if(typeof s.onResult==="function"){s.onResult(h)}if(u===false){h.isMatch=false;return o?h:false}if(f(n)){if(typeof s.onIgnore==="function"){s.onIgnore(h)}h.isMatch=false;return o?h:false}if(typeof s.onMatch==="function"){s.onMatch(h)}return o?h:true};if(n){p.state=a}return p};l.test=((t,e,n,{glob:o,posix:s}={})=>{if(typeof t!=="string"){throw new TypeError("Expected input to be a string")}if(t===""){return{isMatch:false,output:""}}const r=n||{};const i=r.format||(s?u.toPosixSlashes:null);let c=t===o;let a=c&&i?i(t):t;if(c===false){a=i?i(t):t;c=a===o}if(c===false||r.capture===true){if(r.matchBase===true||r.basename===true){c=l.matchBase(t,e,n,s)}else{c=e.exec(a)}}return{isMatch:Boolean(c),match:c,output:a}});l.matchBase=((t,e,n,s=u.isWindows(n))=>{const r=e instanceof RegExp?e:l.makeRe(e,n);return r.test(o.basename(t))});l.isMatch=((t,e,n)=>l(e,n)(t));l.parse=((t,e)=>{if(Array.isArray(t))return t.map(t=>l.parse(t,e));return r(t,{...e,fastpaths:false})});l.scan=((t,e)=>s(t,e));l.compileRe=((t,e,n=false,o=false)=>{if(n===true){return t.output}const s=e||{};const r=s.contains?"":"^";const u=s.contains?"":"$";let i=`${r}(?:${t.output})${u}`;if(t&&t.negated===true){i=`^(?!${i}).*$`}const c=l.toRegex(i,e);if(o===true){c.state=t}return c});l.makeRe=((t,e,n=false,o=false)=>{if(!t||typeof t!=="string"){throw new TypeError("Expected a non-empty string")}const s=e||{};let u={negated:false,fastpaths:true};let i="";let c;if(t.startsWith("./")){t=t.slice(2);i=u.prefix="./"}if(s.fastpaths!==false&&(t[0]==="."||t[0]==="*")){c=r.fastpaths(t,e)}if(c===undefined){u=r(t,e);u.prefix=i+(u.prefix||"")}else{u.output=c}return l.compileRe(u,e,n,o)});l.toRegex=((t,e)=>{try{const n=e||{};return new RegExp(t,n.flags||(n.nocase?"i":""))}catch(t){if(e&&e.debug===true)throw t;return/$^/}});l.constants=i;t.exports=l},429:(t,e,n)=>{"use strict";const o=n(479);const{CHAR_ASTERISK:s,CHAR_AT:r,CHAR_BACKWARD_SLASH:u,CHAR_COMMA:i,CHAR_DOT:c,CHAR_EXCLAMATION_MARK:l,CHAR_FORWARD_SLASH:a,CHAR_LEFT_CURLY_BRACE:f,CHAR_LEFT_PARENTHESES:p,CHAR_LEFT_SQUARE_BRACKET:h,CHAR_PLUS:A,CHAR_QUESTION_MARK:_,CHAR_RIGHT_CURLY_BRACE:d,CHAR_RIGHT_PARENTHESES:b,CHAR_RIGHT_SQUARE_BRACKET:R}=n(99);const E=t=>{return t===a||t===u};const m=t=>{if(t.isPrefix!==true){t.depth=t.isGlobstar?Infinity:1}};const y=(t,e)=>{const n=e||{};const y=t.length-1;const $=n.parts===true||n.scanToEnd===true;const S=[];const C=[];const w=[];let x=t;let g=-1;let v=0;let T=0;let H=false;let L=false;let O=false;let M=false;let N=false;let B=false;let I=false;let D=false;let P=false;let G=0;let K;let k;let F={value:"",depth:0,isGlob:false};const U=()=>g>=y;const X=()=>x.charCodeAt(g+1);const q=()=>{K=k;return x.charCodeAt(++g)};while(g<y){k=q();let t;if(k===u){I=F.backslashes=true;k=q();if(k===f){B=true}continue}if(B===true||k===f){G++;while(U()!==true&&(k=q())){if(k===u){I=F.backslashes=true;q();continue}if(k===f){G++;continue}if(B!==true&&k===c&&(k=q())===c){H=F.isBrace=true;O=F.isGlob=true;P=true;if($===true){continue}break}if(B!==true&&k===i){H=F.isBrace=true;O=F.isGlob=true;P=true;if($===true){continue}break}if(k===d){G--;if(G===0){B=false;H=F.isBrace=true;P=true;break}}}if($===true){continue}break}if(k===a){S.push(g);C.push(F);F={value:"",depth:0,isGlob:false};if(P===true)continue;if(K===c&&g===v+1){v+=2;continue}T=g+1;continue}if(n.noext!==true){const t=k===A||k===r||k===s||k===_||k===l;if(t===true&&X()===p){O=F.isGlob=true;M=F.isExtglob=true;P=true;if($===true){while(U()!==true&&(k=q())){if(k===u){I=F.backslashes=true;k=q();continue}if(k===b){O=F.isGlob=true;P=true;break}}continue}break}}if(k===s){if(K===s)N=F.isGlobstar=true;O=F.isGlob=true;P=true;if($===true){continue}break}if(k===_){O=F.isGlob=true;P=true;if($===true){continue}break}if(k===h){while(U()!==true&&(t=q())){if(t===u){I=F.backslashes=true;q();continue}if(t===R){L=F.isBracket=true;O=F.isGlob=true;P=true;if($===true){continue}break}}}if(n.nonegate!==true&&k===l&&g===v){D=F.negated=true;v++;continue}if(n.noparen!==true&&k===p){O=F.isGlob=true;if($===true){while(U()!==true&&(k=q())){if(k===p){I=F.backslashes=true;k=q();continue}if(k===b){P=true;break}}continue}break}if(O===true){P=true;if($===true){continue}break}}if(n.noext===true){M=false;O=false}let Q=x;let W="";let z="";if(v>0){W=x.slice(0,v);x=x.slice(v);T-=v}if(Q&&O===true&&T>0){Q=x.slice(0,T);z=x.slice(T)}else if(O===true){Q="";z=x}else{Q=x}if(Q&&Q!==""&&Q!=="/"&&Q!==x){if(E(Q.charCodeAt(Q.length-1))){Q=Q.slice(0,-1)}}if(n.unescape===true){if(z)z=o.removeBackslashes(z);if(Q&&I===true){Q=o.removeBackslashes(Q)}}const Z={prefix:W,input:t,start:v,base:Q,glob:z,isBrace:H,isBracket:L,isGlob:O,isExtglob:M,isGlobstar:N,negated:D};if(n.tokens===true){Z.maxDepth=0;if(!E(k)){C.push(F)}Z.tokens=C}if(n.parts===true||n.tokens===true){let e;for(let o=0;o<S.length;o++){const s=e?e+1:v;const r=S[o];const u=t.slice(s,r);if(n.tokens){if(o===0&&v!==0){C[o].isPrefix=true;C[o].value=W}else{C[o].value=u}m(C[o]);Z.maxDepth+=C[o].depth}if(o!==0||u!==""){w.push(u)}e=r}if(e&&e+1<t.length){const o=t.slice(e+1);w.push(o);if(n.tokens){C[C.length-1].value=o;m(C[C.length-1]);Z.maxDepth+=C[C.length-1].depth}}Z.slashes=S;Z.parts=w}return Z};t.exports=y},479:(t,e,n)=>{"use strict";const o=n(622);const s=process.platform==="win32";const{REGEX_BACKSLASH:r,REGEX_REMOVE_BACKSLASH:u,REGEX_SPECIAL_CHARS:i,REGEX_SPECIAL_CHARS_GLOBAL:c}=n(99);e.isObject=(t=>t!==null&&typeof t==="object"&&!Array.isArray(t));e.hasRegexChars=(t=>i.test(t));e.isRegexChar=(t=>t.length===1&&e.hasRegexChars(t));e.escapeRegex=(t=>t.replace(c,"\\$1"));e.toPosixSlashes=(t=>t.replace(r,"/"));e.removeBackslashes=(t=>{return t.replace(u,t=>{return t==="\\"?"":t})});e.supportsLookbehinds=(()=>{const t=process.version.slice(1).split(".").map(Number);if(t.length===3&&t[0]>=9||t[0]===8&&t[1]>=10){return true}return false});e.isWindows=(t=>{if(t&&typeof t.windows==="boolean"){return t.windows}return s===true||o.sep==="\\"});e.escapeLast=((t,n,o)=>{const s=t.lastIndexOf(n,o);if(s===-1)return t;if(t[s-1]==="\\")return e.escapeLast(t,n,s-1);return`${t.slice(0,s)}\\${t.slice(s)}`});e.removePrefix=((t,e={})=>{let n=t;if(n.startsWith("./")){n=n.slice(2);e.prefix="./"}return n});e.wrapOutput=((t,e={},n={})=>{const o=n.contains?"":"^";const s=n.contains?"":"$";let r=`${o}(?:${t})${s}`;if(e.negated===true){r=`(?:^(?!${r}).*$)`}return r})},838:(t,e,n)=>{"use strict";const{readdir:o,stat:s,lstat:r}=n(747).promises;const{readdirSync:u,statSync:i,lstatSync:c}=n(747);const{sep:l}=n(622);const a=n(569);const f=Buffer.from(l);const p={strict:false,stats:false,followSymlinks:false,exclude:undefined,include:undefined,match:{dot:true}};function makePath(t,e,n){if(n==="buffer"){return e==="."?t.name:Buffer.from([...e,...f,...t.name])}else{return e==="."?t.name:`${e}${l}${t.name}`}}function build(t,e,n,o){return{path:e,directory:(n||t).isDirectory(),symlink:(n||t).isSymbolicLink(),...o.stats?{stats:n}:{}}}function makeMatchers({include:t,exclude:e,match:n}){return{includeMatcher:t?a(t,n):null,excludeMatcher:e?a(e,n):null}}const h=t.exports=async function*(t,e={},{includeMatcher:n,excludeMatcher:u,encoding:i}={}){if(n===undefined){e=Object.assign({},p,e);({includeMatcher:n,excludeMatcher:u}=makeMatchers(e));if(/[/\\]$/.test(t))t=t.substring(0,t.length-1);i=Buffer.isBuffer(t)?"buffer":undefined}let c=[];try{c=await o(t,{encoding:i,withFileTypes:true})}catch(n){if(e.strict){throw n}else{yield{path:t,err:n}}}if(!c.length)return;for(const o of c){const c=makePath(o,t,i);if(u&&u(i==="buffer"?String(c):c))continue;let l;if(e.stats){try{l=await(e.followSymlinks?s:r)(c)}catch(t){if(e.strict)throw t;yield{path:c,err:t}}}let a=false;if(e.followSymlinks&&o.isSymbolicLink()){if(!l)try{l=await s(c)}catch{}if(l&&l.isDirectory())a=true}else if(o.isDirectory()){a=true}if(!n||n(i==="buffer"?String(c):c))yield build(o,c,l,e);if(a)yield*await h(c,e,{includeMatcher:n,excludeMatcher:u,encoding:i})}};t.exports.async=(async(e,n={},{includeMatcher:u,excludeMatcher:i,encoding:c}={})=>{if(u===undefined){n=Object.assign({},p,n);({includeMatcher:u,excludeMatcher:i}=makeMatchers(n));if(/[/\\]$/.test(e))e=e.substring(0,e.length-1);c=Buffer.isBuffer(e)?"buffer":undefined}const l=[];let a=[];try{a=await o(e,{encoding:c,withFileTypes:true})}catch(t){if(n.strict){throw t}else{l.push({path:e,err:t})}}if(!a.length)return l;await Promise.all(a.map(async o=>{const a=makePath(o,e,c);if(i&&i(c==="buffer"?String(a):a))return;let f;if(n.stats){try{f=await(n.followSymlinks?s:r)(a)}catch(t){if(n.strict)throw t;l.push({path:a,err:t})}}let p=false;if(n.followSymlinks&&o.isSymbolicLink()){if(!f)try{f=await s(a)}catch{}if(f&&f.isDirectory())p=true}else if(o.isDirectory()){p=true}if(!u||u(c==="buffer"?String(a):a))l.push(build(o,a,f,n));if(p)l.push(...await t.exports.async(a,n,{includeMatcher:u,excludeMatcher:i,encoding:c}))}));return l});t.exports.sync=((e,n={},{includeMatcher:o,excludeMatcher:s,encoding:r}={})=>{if(o===undefined){n=Object.assign({},p,n);({includeMatcher:o,excludeMatcher:s}=makeMatchers(n));if(/[/\\]$/.test(e))e=e.substring(0,e.length-1);r=Buffer.isBuffer(e)?"buffer":undefined}const l=[];let a=[];try{a=u(e,{encoding:r,withFileTypes:true})}catch(t){if(n.strict){throw t}else{l.push({path:e,err:t})}}if(!a.length)return l;for(const u of a){const a=makePath(u,e,r);if(s&&s(r==="buffer"?String(a):a))continue;let f;if(n.stats){try{f=(n.followSymlinks?i:c)(a)}catch(t){if(n.strict)throw t;l.push({path:a,err:t})}}let p=false;if(n.followSymlinks&&u.isSymbolicLink()){if(!f)try{f=i(a)}catch{}if(f&&f.isDirectory())p=true}else if(u.isDirectory()){p=true}if(!o||o(r==="buffer"?String(a):a))l.push(build(u,a,f,n));if(p)l.push(...t.exports.sync(a,n,{includeMatcher:o,excludeMatcher:s,encoding:r}))}return l})},49:(t,e,n)=>{"use strict";const o=n(871);const s=n(855);const r=n(838);const{constants:u,gzip:i,brotliCompress:c}=n(761);const{cpus:l}=n(87);const{hrtime:a}=n(765);const{promisify:f}=n(669);const{stat:p,readFile:h,writeFile:A,realpath:_}=n(747).promises;const{version:d}=n(306);const b=o(process.argv.slice(2),{boolean:["f","follow","h","help","m","mtime","s","silent","v","version"],string:["t","types","_"],number:["c","concurrency"],alias:{c:"concurrency",e:"exclude",h:"help",i:"include",m:"mtime",s:"silent",t:"types",v:"version"}});function exit(t){if(t)console.error(t.stack||t.message||t);process.exit(t?1:0)}if(b.version){console.info(d);process.exit(0)}if(!b._.length||b.help){console.info(`usage: precompress [options] <files,dirs,...>\n\n  Options:\n    -t, --types <type,...>   Types of files to generate. Default: gz,br\n    -c, --concurrency <num>  Number of concurrent operations. Default: auto\n    -i, --include <ext,...>  Only include given file extensions\n    -e, --exclude <ext,...>  Exclude given file extensions\n    -m, --mtime              Skip creating existing files when source file is newer\n    -f, --follow             Follow symbolic links\n    -s, --silent             Do not print compression times\n    -h, --help               Show this text\n    -v, --version            Show the version\n\n  Examples:\n    $ precompress build`);exit()}const R=b.types?b.types.split(","):["gz","br"];const E={level:u.Z_BEST_COMPRESSION};const m={params:{[u.BROTLI_PARAM_MODE]:u.BROTLI_MODE_TEXT,[u.BROTLI_PARAM_QUALITY]:u.BROTLI_MAX_QUALITY}};let y;if(R.includes("gz")){const t=f(i);y=(e=>t(e,E))}let $;if(R.includes("br")){const t=f(c);$=(e=>t(e,m))}function flat(t){return[].concat(...t)}function time(){const t=a();return Math.round((t[0]*1e9+t[1])/1e6)}function filters(t){const e=b[t];if(!e)return null;const n=flat((Array.isArray(e)?e:[e]).map(t=>t.split(","))).filter(t=>!!t);if(!n||!n.length)return null;return n.map(t=>`**/*.${t}`)}async function compress(t){const e=b.silent?null:time();let n=false,o=false;if(b.mtime&&y){try{const[e,o]=await Promise.all([p(t),p(`${t}.gz`)]);if(e&&o&&o.mtime>e.mtime)n=true}catch{}}if(b.mtime&&$){try{const[e,n]=await Promise.all([p(t),p(`${t}.br`)]);if(e&&n&&n.mtime>e.mtime)o=true}catch{}}if(n&&o)return;try{const e=await h(t);if(!n&&y)await A(`${t}.gz`,await y(e));if(!o&&$)await A(`${t}.br`,await $(e))}catch(e){console.info(`Error on ${t}: ${e.code}`)}if(e)console.info(`Compressed ${t} in ${time()-e}ms`)}async function main(){const t=b.silent?null:time();const e={include:filters("include"),exclude:filters("exclude"),followSymlinks:b.follow};let n=[];for(const t of b._){const o=await p(t);if(o.isDirectory()){for await(const o of r(t,e)){if(!o.directory)n.push(o.path)}}else{n.push(b.follow?await _(t):t)}}n=n.filter(t=>{return!t.endsWith(".br")&&!t.endsWith(".gz")});if(!n.length){throw new Error(`No matching files found`)}let o;if(b.concurrency&&typeof b.concurrency==="number"&&b.concurrency>0){o=b.concurrency}else{o=Math.min(n.length,l().length)}await s(n,compress,{concurrency:o});if(t)console.info(`Done in ${time()-t}ms`)}main().then(exit).catch(exit)},306:t=>{"use strict";t.exports=JSON.parse('{"name":"precompress","version":"6.3.2","description":"Generate pre-compressed .gz and .br files for static web servers","author":"silverwind <me@silverwind.io>","repository":"silverwind/precompress","license":"BSD-2-Clause","bin":"./precompress","engines":{"node":"^10.16.0 || >=11.7.0"},"files":["precompress"],"devDependencies":{"@vercel/ncc":"0.24.1","del":"5.1.0","eslint":"7.6.0","eslint-config-silverwind":"18.0.1","execa":"4.0.3","jest":"26.2.2","minimist":"1.2.5","p-map":"4.0.0","rimraf":"3.0.2","rrdir":"8.1.1","tempy":"0.6.0","updates":"10.3.3","versions":"8.4.2"},"keywords":["precompress","pre-compress","compress","compression","static","assets","nginx","apache","gzip","gz","brotli","br"]}')},747:t=>{"use strict";t.exports=require("fs")},87:t=>{"use strict";t.exports=require("os")},622:t=>{"use strict";t.exports=require("path")},765:t=>{"use strict";t.exports=require("process")},669:t=>{"use strict";t.exports=require("util")},761:t=>{"use strict";t.exports=require("zlib")}};var e={};function __webpack_require__(n){if(e[n]){return e[n].exports}var o=e[n]={exports:{}};var s=true;try{t[n](o,o.exports,__webpack_require__);s=false}finally{if(s)delete e[n]}return o.exports}__webpack_require__.ab=__dirname+"/";return __webpack_require__(49)})();